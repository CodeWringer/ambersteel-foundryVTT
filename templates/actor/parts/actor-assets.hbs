{{!-- Requires parameters:
viewModel: {ActorAssetsViewModel}
--}}
<section>
  {{!-- Personal assets --}}
  <h2>{{localize "ambersteel.labels.assetsOnPerson"}}</h2>
  <div class="grid grid-2col">
    <div class="sheet-block">
      <div class="flex flex-row">
        <div class="flex-grow">
          {{> inputLabel for="carryingCapacity" text="ambersteel.labels.carryingCapacity"}}
        </div>
        <span class="width-md">
          <div class="ambersteel-read-only pad-sm fill">
            {{actor.data.data.assets.maxBulk}}
          </div>
        </span>
      </div>
    </div>
    <div class="sheet-block">
      <div class="flex flex-row">
        <div class="flex-grow">
          {{> inputLabel for="totalBulk" text="ambersteel.labels.usedCarryingCapacity"}}
        </div>
        <span class="width-md">
          {{> inputNumberSpinner isEditable=false propertyOwner=actor propertyPath="data.data.assets.totalBulk" contextTemplate="actor-assets" }}
        </span>
      </div>
    </div>
  </div>
  {{> itemGridView isEditable=isEditable propertyOwner=actor propertyPath="data.data.assets" }}
  {{!-- Remote assets --}}
  <h2>{{localize "ambersteel.labels.assetsRemote"}}</h2>
  <ol class="unstyled-list alternating-rows">
    {{#each viewModel.itemViewModels as |vm key|}}
      <li class="ambersteel-list-row sheet-block">
        {{> "systems/ambersteel/templates/item/item/item-list-item.hbs" vm }}
      </li>
    {{/each}}
    {{#if isEditable}}
      <li class="ambersteel-list-row ambersteel-list-footer">
        <div class="fill flex flex-row">
          <span class="flex-grow"></span>
          {{!-- Add property --}}
          <span class="width-sm">
            {{> buttonAdd target=actor creationType="item" withDialog=true }}
          </span>
        </div>
      </li>
    {{/if}}
  </ol>
</section>